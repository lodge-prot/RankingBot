version: '3.3'

services:
  proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5

  rankingbot:
    build: ./rankingbot
    container_name: rankingbot
    volumes:
      - ./rankingbot:/root/rankingbot
    ports:
      - 8888:80
    depends_on:
      - db
      - rest
    environment:
      PYTHONUNBUFFERED: 0
    tty: true
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: mysql:5.7
    container_name: mysql_host
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: my_database
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./db/sql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD-SHELL", "ping localhost || exit 1"]
      retries: 3
      timeout: "5s"
      interval: "60s"

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=mysql_host
      - PMA_USER=root
      - PMA_PASSWORD=root
      - VIRTUAL_HOST=web.mydomain.com
      - VIRTUAL_PORT=8080
    ports:
      - 8080:80
        #links:
        #- mysql_host
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    container_name: redis
    image: redis:3.0.5
    environment:
      TZ: Asia/Tokyo
    ports:
      - 6379:6379
    restart: always
    tty: true
    volumes:
      - "./redis/data:/data"
    command: redis-server --appendonly yes
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5

  rest:
    container_name: rest
    build: rest
    ports:
      - 5001:5000
    expose:
      - 5000
    restart: always
    environment:
      VIRTUAL_HOST: tgu-hq.pink
      VIRTUAL_PORT: 5000
    tty: true
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5

  analysis:
    container_name: analysis
    build: ./analysis
    volumes:
      - ./analysis:/root/analysis
    tty: true
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5

  ci_test:
    container_name: test_cont
    build: ./tool
    volumes:
      - ./tool/containerlist:/tool/containerlist
    tty: true
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  default:
    external:
      name: rank_net
